---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: apply-ingress-auth-annotations
  annotations:
    policies.kyverno.io/title: Apply Ingress Auth Annotations
    policies.kyverno.io/subject: Ingress
    policies.kyverno.io/description: >-
      This policy creates auth annotations on ingresses. When
      the `auth.home.arpa/enabled` annotation is `true` it
      applies the nginx auth annotations for use with Authelia.
spec:
  validationFailureAction: Enforce
  mutateExistingOnPolicyUpdate: true
  generateExisting: true
  rules:
    - name: auth
      match:
        any:
          - resources:
              kinds: [Ingress]
              annotations:
                auth.home.arpa/enabled: "true"
      mutate:
        targets:
        - apiVersion: networking.k8s.io/v1
          kind: Ingress
          preconditions:
            all:
            - key: "{{ target.metadata.annotations.\"auth.home.arpa/enabled\" || false }}"
              operator: Equals
              value: "true"
        patchStrategicMerge:
          metadata:
            # https://www.authelia.com/integration/kubernetes/nginx-ingress/#nginx-ingress-controller-ingress-nginx
            annotations:
              +(nginx.ingress.kubernetes.io/auth-method): GET
              +(nginx.ingress.kubernetes.io/auth-url): |-
                http://authelia.system.svc.cluster.local/api/verify
              +(nginx.ingress.kubernetes.io/auth-signin): |-
                https://auth.${SECRET_DOMAIN}?rm=$request_method
              +(nginx.ingress.kubernetes.io/auth-response-headers): |-
                Remote-User,Remote-Name,Remote-Groups,Remote-Email
              +(nginx.ingress.kubernetes.io/auth-snippet): |
                proxy_set_header X-Forwarded-Method $request_method;
