---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: &name "generate-gatus"
spec:
  generateExisting: true
  rules:
    - name: *name
      match:
        any:
          - resources:
              kinds: ["Ingress"]
              annotations:
                gatus.home.arpa/enabled: "true"
      context:
        - name: GATUSNAME
          variable:
            value: "{{ request.object.metadata.annotations.\"gatus.home.arpa/name\" || request.object.metadata.name }}"
            jmesPath: 'to_string(@)'
        - name: GATUSGROUP
          variable:
            value: "{{ request.object.metadata.annotations.\"gatus.home.arpa/group\" || request.object.metadata.namespace }}"
            jmesPath: 'to_string(@)'
        - name: GATUSURL
          variable:
            value: "{{ request.object.metadata.annotations.\"gatus.home.arpa/url\" || request.object.spec.rules[0].host }}"
            jmesPath: 'to_string(@)'
        - name: GATUSHTTPCODE
          variable:
            value: "{{ request.object.metadata.annotations.\"gatus.home.arpa/http-code\" || 200 }}"
            jmesPath: 'to_string(@)'
      generate:
        apiVersion: "v1"
        kind: "ConfigMap"
        name: "{{ request.object.metadata.name }}-generated-gatus"
        namespace: "{{ request.object.metadata.namespace }}"
        synchronize: true
        data:
            kind: "ConfigMap"
            metadata:
              labels:
                gatus.io/enabled: "true"
            data:
              config.yaml: |-
                endpoints:
                  - name: {{ GATUSNAME }}
                    group: {{ GATUSGROUP }}
                    url: https://{{ GATUSURL }}
                    interval: 1m
                    client:
                      dns-resolver: tcp://1.1.1.1:53
                    conditions: ["[STATUS] == {{ GATUSHTTPCODE }}"]
                    alerts: [{ type: discord }]
                    ui:
                      hide-hostname: true
                      hide-url: true
